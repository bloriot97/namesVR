{"version":3,"sources":["webpack:///./src/index.js?b635"],"names":["App","props","state","scene","undefined","this","createScene","perc","min","max","r","g","base","Math","round","b","toString","slice","names","name_info","name","size","log","parseInt","count","push","primitive","position","x","y","z","height","width","depth","color","perc2color","idxmax","setState","type","rotation","target","id","React","Component","ReactDOM","render","document","querySelector"],"mappings":"0PAWMA,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACTC,WAAOC,GAJM,E,iFASjBC,KAAKC,gB,iCAGIC,EAAKC,EAAIC,GAClB,IAMIC,EAAGC,EANHC,EAAQH,EAAMD,EAgBlB,OAdiBD,EAAL,GAARK,EAAoB,KAEZL,EAAOC,GAAOI,EAAO,KAGtB,IACPF,EAAI,IACJC,EAAIE,KAAKC,MAAM,IAAMP,KAGrBI,EAAI,IACJD,EAAIG,KAAKC,MAAM,IAAM,IAAOP,IAGzB,KAAO,UADF,MAAJG,EAAkB,IAAJC,EAAYI,GACPC,SAAS,KAAKC,OAAO,K,oCAIhD,IAAIC,EAAQ,GADA,uBAEZ,YAAiBC,EAAjB,+CAA4B,CAAC,IAApBC,EAAmB,QACpBC,EAAOR,KAAKS,IAAIC,SAASH,EAAKI,QAAU,IAC5CN,EAAMO,KAAK,kBAAC,SAAD,CACPC,UAAU,QACVC,SAAUP,EAAKQ,EA3CZ,EA2CuB,IAAMR,EAAKS,EA1CpC,EA0C+C,IAAMT,EAAKU,EAzC1D,EA0CDC,OAAQV,EACRW,MAAOX,EACPY,MAAOZ,EACPa,MAAO7B,KAAK8B,WAAWZ,SAASH,EAAKgB,QAAS,KAAM,UAVhD,kFAaZ/B,KAAKgC,SAAS,CACVlC,MAAOe,M,+BAKX,OACI,kBAAC,QAAD,KACI,2BAAOgB,MAAM,YACb,kBAAC,SAAD,CAAQR,UAAU,UAAUY,KAAK,UAAUJ,MAAM,YACjD,kBAAC,SAAD,CAAQR,UAAU,UAAUY,KAAK,cAAcX,SAAS,QAAQY,SAAS,UAAUC,OAAO,sBACtF,kBAAC,SAAD,CAAQd,UAAU,WAAWe,GAAG,oBAAoBd,SAAS,mBAEhEtB,KAAKH,MAAMC,W,GA3DNuC,IAAMC,WAiExBC,IAASC,OAAO,kBAAC7C,EAAD,MAAQ8C,SAASC,cAAc,qB","file":"static/js/main.1eb07b71.chunk.js","sourcesContent":["import 'aframe';\nimport {Entity, Scene} from 'aframe-react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport name_info from './data_3D_sample.json';\n\nconst scaleX = 5,\n    scaleY = 5,\n    scaleZ = 5;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        scene: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.createScene();\n  }   \n\n  perc2color(perc,min,max) {\n    var base = (max - min);\n\n    if (base == 0) { perc = 100; }\n    else {\n        perc = (perc - min) / base * 100; \n    }\n    var r, g, b = 0;\n    if (perc < 50) {\n        r = 255;\n        g = Math.round(5.1 * perc);\n    }\n    else {\n        g = 255;\n        r = Math.round(510 - 5.10 * perc);\n    }\n    var h = r * 0x10000 + g * 0x100 + b * 0x1;\n    return '#' + ('000000' + h.toString(16)).slice(-6);\n  }\n\n  createScene() {\n    let names = [];\n    for (let name of name_info) {\n        let size = Math.log(parseInt(name.count)) / 250;\n        names.push(<Entity \n            primitive=\"a-box\" \n            position={name.x/scaleX + \" \" + name.y/scaleY + \" \" + name.z/scaleZ} \n            height={size}\n            width={size}\n            depth={size}\n            color={this.perc2color(parseInt(name.idxmax), 1900, 2019)}\n        />)\n    }\n    this.setState({\n        scene: names\n    })\n  }\n\n  render() {\n    return (\n        <Scene>\n            <a-sky color=\"#000000\"></a-sky>\n            <Entity primitive=\"a-light\" type=\"ambient\" color=\"#445451\"/>\n            <Entity primitive=\"a-light\" type=\"directional\" position=\"0 0 0\" rotation=\"-90 0 0\" target=\"#directionaltarget\">\n                <Entity primitive=\"a-entity\" id=\"directionaltarget\" position=\"-1 -0.5 -0.75\"></Entity>\n            </Entity>\n            {this.state.scene}\n        </Scene>\n    );\n  }\n}\n\nReactDOM.render(<App/>, document.querySelector('#sceneContainer'));\n"],"sourceRoot":""}